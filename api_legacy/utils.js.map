{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/api_legacy/utils.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;AAGjC,MAAM,UAAU,eAAe,CAAC,GAAW,EAAE,GAAQ;IACnD,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IACrD,IAAI,SAAS,CAAC,OAAO,EAAE,EAAE;QACvB,OAAO,SAAS,CAAC,MAAM,EAAE,CAAC;KAC3B;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAMD,MAAM,UAAU,wBAAwB,CAAC,YAAoB;IAC3D,OAAO,EAAE,OAAO,EAAE,QAAQ,YAAY,UAAU,EAAE,QAAQ,EAAE,QAAQ,YAAY,WAAW,EAAE,CAAC;AAChG,CAAC;AAGD,MAAM,UAAU,8BAA8B,CAAC,YAAoB;IACjE,OAAO,EAAE,OAAO,EAAE,SAAS,YAAY,UAAU,EAAE,QAAQ,EAAE,SAAS,YAAY,WAAW,EAAE,CAAC;AAClG,CAAC","sourcesContent":["import * as moment from 'moment';\n\n\nexport function reviveJsonValue(key: string, val: any) {\n  const timestamp = moment(val, moment.ISO_8601, true);\n  if (timestamp.isValid()) {\n    return timestamp.toDate();\n  }\n  return val;\n}\n\n\nexport type APIResponse<O> = { errors: string[], result: O | undefined };\n\n\nexport function getEventNamesForEndpoint(endpointName: string): { request: string, response: string } {\n  return { request: `_api-${endpointName}-request`, response: `_api-${endpointName}-response` };\n}\n\n\nexport function getEventNamesForWindowEndpoint(endpointName: string): { request: string, response: string } {\n  return { request: `_open-${endpointName}-request`, response: `_open-${endpointName}-response` };\n}\n"]}