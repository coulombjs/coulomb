{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../../src/app/renderer.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as log from 'electron-log';\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport { NonIdealState, Spinner } from '@blueprintjs/core';\n\nimport { AppConfig } from '../config/app';\nimport { RendererConfig } from '../config/renderer';\nimport { Model, AnyIDType } from '../db/models';\nimport { Index } from '../db/query';\n\nimport '!style-loader!css-loader!@blueprintjs/datetime/lib/css/blueprint-datetime.css';\nimport '!style-loader!css-loader!@blueprintjs/core/lib/css/blueprint.css';\nimport '!style-loader!css-loader!./normalize.css';\nimport '!style-loader!css-loader!./renderer.css';\nimport { useIPCEvent, useIPCValue, callIPC } from '../ipc/renderer';\n\n\ninterface AppRenderer<C extends RendererConfig<any>> {\n  root: HTMLElement\n  useCount: UseCountHook<C>\n  useIDs: UseIDsHook<C>\n  useMany: UseManyHook<C>\n  useOne: UseOneHook<C>\n\n  openPredefinedWindow:\n    (windowID: keyof C[\"app\"][\"windows\"], params?: object) => Promise<void>\n\n  openObjectEditor:\n    (objectTypeID: keyof C[\"app\"][\"data\"], objectID: any, params?: string) => Promise<void>\n}\n\n\n// Data operation hook interfaces\n\ninterface UseManyHookResult<M extends Model> {\n  objects: Index<M>\n  isUpdating: boolean\n}\ntype UseManyHook<C extends RendererConfig<any>> =\n<M extends Model, Q extends object = {}>\n(modelName: keyof C[\"app\"][\"data\"], query?: Q) => UseManyHookResult<M>\n\ninterface UseIDsHookResult<IDType extends AnyIDType> {\n  ids: IDType[]\n  isUpdating: boolean\n}\ntype UseIDsHook<C extends RendererConfig<any>> =\n<IDType extends AnyIDType, Q extends object = {}>\n(modelName: keyof C[\"app\"][\"data\"], query?: Q) => UseIDsHookResult<IDType>\n\ninterface UseCountHookResult {\n  count: number\n  isUpdating: boolean\n}\ntype UseCountHook<C extends RendererConfig<any>> =\n<Q extends object>\n(modelName: keyof C[\"app\"][\"data\"], query: Q) => UseCountHookResult\n\ninterface UseOneHookResult<M extends Model> {\n  object: M | null\n  isUpdating: boolean\n  refresh: () => void\n}\ntype UseOneHook<C extends RendererConfig<any>> =\n<M extends Model, IDType extends AnyIDType>\n(modelName: keyof C[\"app\"][\"data\"], objectID: IDType | null) => UseOneHookResult<M>\n\n\n// Render application screen in a new window\n// with given top-level window UI component and (if applicable) any parameters\n// wrapped in configured context provider components.\nexport const renderApp = <A extends AppConfig, C extends RendererConfig<A>>(config: C): AppRenderer<C> => {\n\n  // electron-webpack guarantees presence of #app in index.html it bundles\n  const appRoot = document.getElementById('app') as HTMLElement;\n\n  // Add a class allowing platform-specific styling\n  document.documentElement.classList.add(`platform--${process.platform}`);\n\n  // Get all params passed to the window via GET query string\n  const searchParams = new URLSearchParams(window.location.search);\n\n  // Prepare getter for requested top-level window UI React component\n  const componentId = searchParams.get('c');\n  const componentImporter = componentId ? config.windowComponents[componentId] : null;\n\n  log.debug(`Requested window component ${componentId}`);\n\n\n  const openObjectEditor = async (dataTypeID: keyof C[\"app\"][\"data\"], objectID: any, params?: string) => {\n    if (config.objectEditorWindows === undefined) {\n      throw new Error(\"No object editor windows configured\");\n    }\n    const windowID = config.objectEditorWindows[dataTypeID];\n    const windowOptions = config.app.windows[windowID as keyof typeof config.app.windows];\n    if (windowID === undefined) {\n      throw new Error(\"Object editor window not configured\");\n    }\n    await callIPC('open-predefined-window', {\n      id: windowID,\n      params: {\n        componentParams: `objectID=${objectID}&${params || ''}`,\n        title: `${windowOptions.openerParams.title} (${objectID})`,\n      },\n    });\n  };\n\n  const openPredefinedWindow = async (windowID: keyof typeof config[\"app\"][\"windows\"], params?: object) => {\n    await callIPC('open-predefined-window', {\n      id: windowID,\n      params: params || {},\n    });\n  };\n\n\n  // TODO: Refactor out hook initialization\n\n  const useIDs: UseIDsHook<C> =\n  <IDType extends AnyIDType, Q extends object = {}>\n  (modelName: keyof A[\"data\"], query?: Q) => {\n    /* Queries data for specified model, listens for update events and updates the dataset. */\n\n    const trackedIDs = useIPCValue<Q, { ids: IDType[] }>\n    (`model-${modelName}-list-ids`, { ids: [] }, query);\n\n    useIPCEvent<{ ids?: string[] }>(`model-${modelName}-objects-changed`, function ({ ids }) {\n      trackedIDs.refresh();\n\n      // See TODO at useMany().\n      //const stringIDs = trackedIDs.value.ids.map(id => `${id}`);\n      //const shouldRefresh = ids !== undefined\n      //  ? ids.filter(id => stringIDs.includes(id)).length > 0\n      //  : true;\n      //if (shouldRefresh) {\n      //  trackedIDs.refresh();\n      //}\n    });\n\n    return { ids: trackedIDs.value.ids, isUpdating: trackedIDs.isUpdating };\n  }\n\n  const useCount: UseCountHook<C> =\n  <Q extends object = any>\n  (modelName: keyof A[\"data\"], query?: Q) => {\n    /* Queries data for specified model, listens for update events and updates the dataset. */\n\n    const count = useIPCValue<Q, { count: number }>\n    (`model-${modelName}-count`, { count: 0 }, query);\n\n    useIPCEvent<{ ids?: string[] }>(`model-${modelName}-objects-changed`, function () {\n      count.refresh();\n    });\n\n    return { count: count.value.count, isUpdating: count.isUpdating };\n  }\n\n  const useMany: UseManyHook<C> =\n  <M extends Model, Q extends object = {}>\n  (modelName: keyof A[\"data\"], query?: Q) => {\n    /* Queries data for specified model, listens for update events and updates the dataset. */\n\n    const objects = useIPCValue<Q, Index<M>>\n    (`model-${modelName}-read-all`, {}, query);\n\n    useIPCEvent<{ ids?: string[] }>(`model-${modelName}-objects-changed`, function ({ ids }) {\n      // TODO: generic query refresh IPC event/hook?\n\n      objects.refresh();\n\n      // TODO: Only refresh when needed.\n      // Below code works, except it won’t trigger refresh\n      // when new objects are added:\n      // log.silly(\"C/renderApp: Changed object IDs\", ids);\n      // const trackedObjectIDs = Object.keys(objects.value);\n      // const shouldRefresh = ids === undefined || ids.filter(id => trackedObjectIDs.includes(id)).length > 0;\n      // if (shouldRefresh) {\n      //   log.debug(\"C/renderApp: Refreshing objects\", ids);\n      //   objects.refresh();\n      // } else {\n      //   log.debug(\"C/renderApp: Will not refresh objects\", ids);\n      // }\n    });\n\n    return { objects: objects.value, isUpdating: objects.isUpdating };\n  }\n\n  const useOne: UseOneHook<C> =\n  <M extends Model, IDType extends AnyIDType>\n  (modelName: keyof A[\"data\"], objectID: IDType | null) => {\n    /* Queries data for specified model, listens for update events and updates the dataset. */\n\n    const object = useIPCValue<{ objectID: IDType | null }, { object: M | null }>\n    (`model-${modelName}-read-one`, { object: null as M | null }, { objectID });\n\n    useIPCEvent<{ ids?: string[] }>(`model-${modelName}-objects-changed`, function ({ ids }) {\n      const shouldRefresh = ids === undefined || ids.includes(`${objectID}`);\n      if (shouldRefresh) {\n        object.refresh();\n      }\n    }, [objectID]);\n\n    return {\n      object: object.value.object,\n      isUpdating: object.isUpdating,\n      refresh: () => object.refresh(),\n    };\n  }\n\n  // Fetch top-level UI component class and render it.\n  if (componentImporter) {\n    (async () => {\n      // Show loading indicator while components are being resolved\n      ReactDOM.render(<Spinner className=\"initial-spinner\" />, appRoot);\n\n      const ctxProviderConfig = config.contextProviders || [];\n\n      // Get props prescribed for each context provider component\n      var ctxProviderProps = await Promise.all(ctxProviderConfig.map(item => item.getProps(config)));\n\n      log.silly(\n        `C/renderApp: Resolving components`,\n        componentImporter, ctxProviderConfig);\n\n      // Resolve (import) components in parallel, first UI and then context providers\n      const promisedComponents: { default: React.FC<any> }[] = await Promise.all([\n        componentImporter(),\n        ...ctxProviderConfig.map(async (ctxp) => await ctxp.cls()),\n      ]);\n\n      log.silly(\n        `C/renderApp: Resolved components`,\n        promisedComponents);\n\n      // Break down components into top-level window UI & context providers\n      const TopWindowComponent = promisedComponents[0].default;\n      var ctxProviderComponents = promisedComponents.\n        slice(1, promisedComponents.length).\n        map(item => item.default);\n\n      // Reorder context providers so that top-most is the most basic\n      ctxProviderComponents.reverse();\n      ctxProviderProps.reverse();\n\n      // Write out top-level window component JSX\n      var appMarkup = <TopWindowComponent query={searchParams} />;\n\n      log.debug(\n        `C/renderApp: Got context provider components`,\n        ctxProviderComponents);\n\n      // Wrap the JSX into context provider components\n      for (const [idx, ContextProvider] of ctxProviderComponents.entries()) {\n        log.verbose(  \n          `C/renderApp: Initializing context provider #${idx}`,\n          ctxProviderComponents[idx],\n          ctxProviderProps[idx]);\n\n        appMarkup = (\n          <ContextProvider {...ctxProviderProps[idx]}>\n            {appMarkup}\n          </ContextProvider>\n        );\n      }\n\n      log.debug(\"C/renderApp: Rendering\");\n\n      // Render the JSX\n      ReactDOM.render(appMarkup, appRoot);\n    })();\n\n    return {\n      root: appRoot,\n      useCount,\n      useIDs,\n      useMany,\n      useOne,\n      openPredefinedWindow,\n      openObjectEditor,\n    };\n\n  } else {\n    // Component specified in GET params is not present in app renderer config.\n    // TODO: Handle misconfigured React context providers and failed import at runtime\n    ReactDOM.render(<NonIdealState\n      icon=\"error\"\n      title=\"Unknown component requested\" />, appRoot);\n\n    log.error(\"Unknown component requested\", componentId);\n    throw new Error(\"Unknown component requested\");\n  }\n\n};"]}