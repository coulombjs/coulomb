{"version":3,"file":"schema.js","sourceRoot":"","sources":["../../../../../src/db/isogit-yaml/main/yaml/schema.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,IAAI,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,mBAAmB,EAAE,MAAM,kBAAkB,CAAC;AACvD,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAGpD,MAAM,CAAC,MAAM,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC;IACpC,OAAO,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC;IAEnC,4EAA4E;IAC5E,QAAQ,EAAE;QACR,GAAI,IAAI,CAAC,mBAA2B,CAAC,QAAQ;QAC7C,GAAG,CAAC,mBAAmB,EAAE,cAAc,CAAC;KACzC;CACF,CAAC,CAAC;AACH,wDAAwD","sourcesContent":["import * as yaml from 'js-yaml';\nimport { customTimestampType } from './yaml-custom-ts';\nimport { customBoolType } from './yaml-custom-bool';\n\n\nexport const Schema = new yaml.Schema({\n  include: [yaml.DEFAULT_SAFE_SCHEMA],\n\n  // Trick because js-yaml API appears to not support augmenting implicit tags\n  implicit: [\n    ...(yaml.DEFAULT_SAFE_SCHEMA as any).implicit,\n    ...[customTimestampType, customBoolType],\n  ],\n});\n/* This schema simply adds timestamp parsing to YAML. */\n"]}