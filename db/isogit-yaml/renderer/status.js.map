{"version":3,"file":"status.js","sourceRoot":"","sources":["../../../../src/db/isogit-yaml/renderer/status.tsx"],"names":[],"mappings":"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","sourcesContent":["import { shell } from 'electron';\nimport * as log from 'electron-log';\nimport React, { useState } from 'react';\n\nimport {\n  Button, IconName, FormGroup, InputGroup, Intent,\n  ButtonGroup, NonIdealState, Spinner, Callout,\n} from '@blueprintjs/core';\n\nimport { callIPC, useIPCValue } from '../../../ipc/renderer';\n\nimport { DatabaseStatusComponentProps } from '../../../config/renderer';\nimport { BackendDescription, BackendStatus } from '../base';\n\nimport styles from './status.scss';\n\n\nconst BackendDetails: React.FC<DatabaseStatusComponentProps<BackendDescription, BackendStatus>> =\nfunction ({ dbIPCPrefix, status, description }) {\n  const ipcPrefix = dbIPCPrefix;\n\n  const numUncommitted =\n    useIPCValue(`${ipcPrefix}-count-uncommitted`, { numUncommitted: 0 }).\n    value.numUncommitted;\n\n  // Requests sync with push\n  async function handleRequestFullSync() {\n    await callIPC(`${ipcPrefix}-git-request-push`);\n    await callIPC(`${ipcPrefix}-git-trigger-sync`);\n  }\n\n  return (\n    <ButtonGroup fill vertical alignText=\"left\">\n      <Button\n          className={styles.sourceInfo}\n          title={`${description.gitUsername}@${description.gitRepo}`}\n          icon=\"git-repo\"\n          onClick={() => {\n            if (description.gitRepo) {\n              require('electron').shell.openExternal(description.gitRepo);\n            }\n          }}>\n        {description.gitUsername}@{description.gitRepo}\n      </Button>\n\n      <ActionableStatus\n        status={status}\n        uncommittedFileCount={numUncommitted}\n        onRequestFullSync={handleRequestFullSync}\n        onShowSettingsWindow={() => callIPC('open-predefined-window', { id: 'settings' })}\n      />\n    </ButtonGroup>\n  );\n};\n\nexport default BackendDetails;\n\n\ninterface ActionableStatusProps {\n  status: BackendStatus\n  uncommittedFileCount: number\n  onRequestFullSync: () => Promise<void>\n  onShowSettingsWindow: () => void\n}\nconst ActionableStatus: React.FC<ActionableStatusProps> = function ({\n    status, uncommittedFileCount,\n    onRequestFullSync,\n    onShowSettingsWindow }) {\n\n  let statusIcon: IconName;\n  let tooltipText: string | undefined;\n  let statusIntent: Intent | undefined;\n  let action: null | (() => void);\n\n  if (status.isMisconfigured) {\n    statusIcon = \"error\";\n    tooltipText = \"Configure\";\n    statusIntent = \"danger\";\n    action = onShowSettingsWindow;\n\n  } else if (status.isOnline !== true) {\n    statusIcon = \"offline\";\n    tooltipText = \"Sync now\"\n    statusIntent = \"primary\";\n    action = onRequestFullSync;\n\n  } else if (status.hasLocalChanges && uncommittedFileCount > 0) {\n    statusIcon = \"git-commit\";\n    tooltipText = \"Sync now\";\n    statusIntent = undefined;\n    action = onRequestFullSync;\n\n  } else if (status.statusRelativeToLocal === 'diverged') {\n    statusIcon = \"git-branch\"\n    tooltipText = \"Resolve conflict and sync\";\n    statusIntent = \"warning\";\n    action = onRequestFullSync;\n\n  } else if (status.statusRelativeToLocal === 'behind') {\n    statusIcon = \"cloud-upload\"\n    tooltipText = \"Sync now\";\n    statusIntent = \"primary\";\n    action = onRequestFullSync;\n\n  } else {\n    statusIcon = \"updated\"\n    tooltipText = \"Sync now\";\n    statusIntent = \"primary\";\n    action = onRequestFullSync;\n  }\n\n  return (\n    <Button\n        className={styles.backendStatus}\n        onClick={action || (() => {})}\n        icon={statusIcon}\n        intent={statusIntent}\n        disabled={action === null}>\n      {tooltipText}\n    </Button>\n  );\n};\n\n\nexport const PasswordPrompt: React.FC<{ dbIPCPrefix: string, onConfirm: () => void }> =\nfunction ({ dbIPCPrefix, onConfirm }) {\n  const [value, setValue] = useState('');\n\n  async function handlePasswordConfirm() {\n    await callIPC<{ password: string }, { success: true }>(`${dbIPCPrefix}-git-set-password`, { password: value });\n    await callIPC(`${dbIPCPrefix}-git-trigger-sync`);\n    onConfirm();\n  }\n\n  return <div className={styles.passwordPrompt}>\n    <FormGroup\n        label=\"Please enter repository password:\"\n        helperText=\"The password will be kept in memory and not stored to disk.\">\n      <InputGroup\n        type=\"password\"\n        value={value}\n        onChange={(event: React.FormEvent<HTMLElement>) => setValue((event.target as HTMLInputElement).value)}\n        leftIcon=\"key\"\n        rightElement={\n          value.trim() === ''\n          ? undefined\n          : <Button\n                minimal={true}\n                onClick={handlePasswordConfirm}\n                icon=\"tick\"\n                intent=\"primary\">\n              Confirm\n            </Button>}\n      />\n    </FormGroup>\n  </div>;\n};\n\n\ninterface DBSyncScreenProps {\n  dbName: string\n  db: BackendDescription\n  onDismiss: () => void\n}\nexport const DBSyncScreen: React.FC<DBSyncScreenProps> = function ({ dbName, db, onDismiss }) {\n  let dbInitializationScreen: JSX.Element;\n\n  if (db?.status === undefined) {\n    dbInitializationScreen = <NonIdealState\n      icon={<Spinner />}\n      title=\"Initializing database\"\n    />\n\n  } else if (db.status.lastSynchronized !== null && db.status.isOnline !== true) {\n    dbInitializationScreen = <NonIdealState\n      icon=\"offline\"\n      title=\"Offline\"\n      description={<>\n        <p>Unable to reach data repository. There may be connection issues.</p>\n        <Button onClick={onDismiss} intent=\"primary\">Synchronize later</Button>\n      </>}\n    />\n\n  } else if (db.status.needsPassword) {\n    dbInitializationScreen = <NonIdealState\n      icon=\"key\"\n      title=\"Password required\"\n      description={<PasswordPrompt dbIPCPrefix={`db-${dbName}`} onConfirm={() => void 0} />}\n    />\n\n  } else if (db.status.isPushing || db.status.isPulling) {\n    dbInitializationScreen = <NonIdealState\n      icon={<Spinner />}\n      title=\"Synchronizing data\"\n      description={db.status.isPushing ? \"Sending changes\" : \"Fetching changes\"}\n    />\n\n  } else if (db.status.lastSynchronized === null && db.status.hasLocalChanges === false) {\n    dbInitializationScreen = <NonIdealState\n      icon={<Spinner />}\n      title=\"Connecting\"\n    />\n\n  } else if (db.status.statusRelativeToLocal === 'diverged') {\n    dbInitializationScreen = <NonIdealState\n      icon=\"warning-sign\"\n      title=\"Diverging changes found\"\n      description={<>\n        <p>\n          Failed to integrate local and remote changes.\n        </p>\n        <p>\n          To resolve, you may want to contact registry manager representative.\n        </p>\n\n        <Button onClick={onDismiss} intent=\"primary\">Dismiss</Button>\n\n        <TechnicalGitNotice clonePath={db.localClonePath}>\n          <p>\n            Unable to perform Git fast-forward merge.\n            It is possible that the same object was modified by multiple users.\n          </p>\n          <p>\n            May be resolvable with <code>git rebase origin/maste</code>\n            (use at your risk, or get in touch with registry manager).\n          </p>\n        </TechnicalGitNotice>\n      </>}\n    />\n\n  } else if (db.status.hasLocalChanges === true) {\n    dbInitializationScreen = <NonIdealState\n      icon=\"warning-sign\"\n      title=\"Cannot synchronize\"\n      description={<>\n        <p>Uncommitted changes present.</p>\n\n        <Button onClick={onDismiss} intent=\"primary\">Dismiss</Button>\n\n        <TechnicalGitNotice clonePath={db.localClonePath}>\n          <p>\n            Uncommitted or unstaged changes present in local clone.\n          </p>\n          <p>\n            May be resolvable with <code>git status</code> and manually discarding/staging/committing the changes\n            (use at your risk, or get in touch with registry manager).\n          </p>\n        </TechnicalGitNotice>\n      </>}\n    />\n\n  } else if (db.status.lastSynchronized !== null) {\n    dbInitializationScreen = <NonIdealState\n      icon=\"tick\"\n      title=\"Ready\"\n      description={<>\n        <p>Last synchronized: {db.status.lastSynchronized.toISOString()}</p>\n        <Button onClick={onDismiss} intent=\"primary\">Dismiss</Button>\n      </>}\n    />\n\n  } else {\n    dbInitializationScreen = <NonIdealState\n      icon=\"warning-sign\"\n      title=\"Ready\"\n      description={<>\n        <p>Last synchronized: N/A</p>\n        <Button onClick={onDismiss} intent=\"primary\">Synchronize later</Button>\n      </>}\n    />\n\n  }\n  return dbInitializationScreen;\n};\n\n\nconst TechnicalGitNotice: React.FC<{ clonePath: string | undefined }> = function ({ clonePath, children }) {\n  function openLocalClonePath() {\n    if (clonePath) {\n      log.debug(\"Revealing local clone folder\", clonePath);\n      shell.showItemInFolder(clonePath);\n    } else {\n      log.error(\"Unable to reveal local clone folder: not specified in backend description.\");\n    }\n  }\n\n  return (\n    <Callout title=\"Technical information\" icon=\"cog\"\n        style={{ textAlign: 'left', marginTop: '2rem', fontSize: '90%' }}>\n\n      {children}\n\n      <p>\n        If you have Git CLI installed,\n        you can attempt to resolve this manually.\n        Local clone path {clonePath ? <a onClick={openLocalClonePath}>(reveal)</a> : null}:\n        {\" \"}\n        <code>{clonePath || 'N/A'}</code>.\n      </p>\n      <p>\n        Note that the repository was initialized by Git implementation in Node,\n        which is different than the official Git CLI, but most Git CLI commands should work.\n      </p>\n    </Callout>\n  );\n};\n"]}