import React, { useContext } from 'react';
import { Button, ButtonGroup } from '@blueprintjs/core';
import { LangConfigContext } from './context';
export const Trans = function ({ what }) {
    const lang = useContext(LangConfigContext);
    const translated = what[lang.selected];
    const untranslated = what[lang.default];
    // const translated = translatable[lang.selected.id];
    // if (!translated) {
    //   // Register missing translation
    // }
    return React.createElement("span", null, translated || untranslated || '(malformed translatable string)');
};
export const LangSelector = function ({ value, disableUnlessTranslated, groupProps }) {
    const cfg = useContext(LangConfigContext);
    return (React.createElement(ButtonGroup, Object.assign({}, groupProps), Object.keys(cfg.available).map((langId) => React.createElement(LangSelectorButton, { key: langId, id: langId, title: cfg.available[langId], isSelected: langId === cfg.selected, onSelect: () => cfg.select(langId), disableUnlessTranslated: disableUnlessTranslated, hasTranslation: (value !== undefined) ? (value[langId] !== undefined) : undefined }))));
};
const LangSelectorButton = function (props) {
    return (React.createElement(Button, { active: props.isSelected, disabled: props.hasTranslation === false && props.disableUnlessTranslated === true, onClick: props.onSelect }, props.id));
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2lkZ2V0cy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9sb2NhbGl6ZXIvcmVuZGVyZXIvd2lkZ2V0cy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxLQUFLLEVBQUUsRUFBRSxVQUFVLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDMUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQXFCLE1BQU0sbUJBQW1CLENBQUM7QUFJM0UsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBTTlDLE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBeUMsVUFBVSxFQUFFLElBQUksRUFBRTtJQUMzRSxNQUFNLElBQUksR0FBRyxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQztJQUMzQyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3ZDLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFFeEMscURBQXFEO0lBQ3JELHFCQUFxQjtJQUNyQixvQ0FBb0M7SUFDcEMsSUFBSTtJQUVKLE9BQU8sa0NBQU8sVUFBVSxJQUFJLFlBQVksSUFBSSxpQ0FBaUMsQ0FBUSxDQUFDO0FBQ3hGLENBQUMsQ0FBQztBQVFGLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBZ0MsVUFBVSxFQUFFLEtBQUssRUFBRSx1QkFBdUIsRUFBRSxVQUFVLEVBQUU7SUFDL0csTUFBTSxHQUFHLEdBQUcsVUFBVSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFFMUMsT0FBTyxDQUNMLG9CQUFDLFdBQVcsb0JBQUssVUFBVSxHQUN4QixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFjLEVBQUUsRUFBRSxDQUNqRCxvQkFBQyxrQkFBa0IsSUFDakIsR0FBRyxFQUFFLE1BQU0sRUFDWCxFQUFFLEVBQUUsTUFBTSxFQUNWLEtBQUssRUFBRSxHQUFHLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUM1QixVQUFVLEVBQUUsTUFBTSxLQUFLLEdBQUcsQ0FBQyxRQUFRLEVBQ25DLFFBQVEsRUFBRSxHQUFHLEVBQUUsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUNsQyx1QkFBdUIsRUFBRSx1QkFBdUIsRUFDaEQsY0FBYyxFQUFFLENBQUMsS0FBSyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxHQUNqRixDQUNILENBQ1csQ0FDZixDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBV0YsTUFBTSxrQkFBa0IsR0FBc0MsVUFBVSxLQUFLO0lBQzNFLE9BQU8sQ0FDTCxvQkFBQyxNQUFNLElBQ0gsTUFBTSxFQUFFLEtBQUssQ0FBQyxVQUFVLEVBQ3hCLFFBQVEsRUFBRSxLQUFLLENBQUMsY0FBYyxLQUFLLEtBQUssSUFBSSxLQUFLLENBQUMsdUJBQXVCLEtBQUssSUFBSSxFQUNsRixPQUFPLEVBQUUsS0FBSyxDQUFDLFFBQVEsSUFDeEIsS0FBSyxDQUFDLEVBQUUsQ0FDRixDQUNWLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiwgQnV0dG9uR3JvdXAsIElCdXR0b25Hcm91cFByb3BzIH0gZnJvbSAnQGJsdWVwcmludGpzL2NvcmUnO1xuXG5pbXBvcnQgeyBUcmFuc2xhdGFibGUgfSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB7IExhbmdDb25maWdDb250ZXh0IH0gZnJvbSAnLi9jb250ZXh0JztcblxuXG5pbnRlcmZhY2UgVHJhbnNsYXRhYmxlQ29tcG9uZW50UHJvcHMge1xuICB3aGF0OiBUcmFuc2xhdGFibGU8c3RyaW5nPlxufVxuZXhwb3J0IGNvbnN0IFRyYW5zOiBSZWFjdC5GQzxUcmFuc2xhdGFibGVDb21wb25lbnRQcm9wcz4gPSBmdW5jdGlvbiAoeyB3aGF0IH0pIHtcbiAgY29uc3QgbGFuZyA9IHVzZUNvbnRleHQoTGFuZ0NvbmZpZ0NvbnRleHQpO1xuICBjb25zdCB0cmFuc2xhdGVkID0gd2hhdFtsYW5nLnNlbGVjdGVkXTtcbiAgY29uc3QgdW50cmFuc2xhdGVkID0gd2hhdFtsYW5nLmRlZmF1bHRdO1xuXG4gIC8vIGNvbnN0IHRyYW5zbGF0ZWQgPSB0cmFuc2xhdGFibGVbbGFuZy5zZWxlY3RlZC5pZF07XG4gIC8vIGlmICghdHJhbnNsYXRlZCkge1xuICAvLyAgIC8vIFJlZ2lzdGVyIG1pc3NpbmcgdHJhbnNsYXRpb25cbiAgLy8gfVxuXG4gIHJldHVybiA8c3Bhbj57dHJhbnNsYXRlZCB8fCB1bnRyYW5zbGF0ZWQgfHwgJyhtYWxmb3JtZWQgdHJhbnNsYXRhYmxlIHN0cmluZyknfTwvc3Bhbj47XG59O1xuXG5cbmludGVyZmFjZSBMYW5nU2VsZWN0b3JQcm9wcyB7XG4gIHZhbHVlPzogVHJhbnNsYXRhYmxlPGFueT5cbiAgZGlzYWJsZVVubGVzc1RyYW5zbGF0ZWQ/OiBib29sZWFuXG4gIGdyb3VwUHJvcHM/OiBJQnV0dG9uR3JvdXBQcm9wc1xufVxuZXhwb3J0IGNvbnN0IExhbmdTZWxlY3RvcjogUmVhY3QuRkM8TGFuZ1NlbGVjdG9yUHJvcHM+ID0gZnVuY3Rpb24gKHsgdmFsdWUsIGRpc2FibGVVbmxlc3NUcmFuc2xhdGVkLCBncm91cFByb3BzIH0pIHtcbiAgY29uc3QgY2ZnID0gdXNlQ29udGV4dChMYW5nQ29uZmlnQ29udGV4dCk7XG5cbiAgcmV0dXJuIChcbiAgICA8QnV0dG9uR3JvdXAgey4uLmdyb3VwUHJvcHN9PlxuICAgICAge09iamVjdC5rZXlzKGNmZy5hdmFpbGFibGUpLm1hcCgobGFuZ0lkOiBzdHJpbmcpID0+XG4gICAgICAgIDxMYW5nU2VsZWN0b3JCdXR0b25cbiAgICAgICAgICBrZXk9e2xhbmdJZH1cbiAgICAgICAgICBpZD17bGFuZ0lkfVxuICAgICAgICAgIHRpdGxlPXtjZmcuYXZhaWxhYmxlW2xhbmdJZF19XG4gICAgICAgICAgaXNTZWxlY3RlZD17bGFuZ0lkID09PSBjZmcuc2VsZWN0ZWR9XG4gICAgICAgICAgb25TZWxlY3Q9eygpID0+IGNmZy5zZWxlY3QobGFuZ0lkKX1cbiAgICAgICAgICBkaXNhYmxlVW5sZXNzVHJhbnNsYXRlZD17ZGlzYWJsZVVubGVzc1RyYW5zbGF0ZWR9XG4gICAgICAgICAgaGFzVHJhbnNsYXRpb249eyh2YWx1ZSAhPT0gdW5kZWZpbmVkKSA/ICh2YWx1ZVtsYW5nSWRdICE9PSB1bmRlZmluZWQpIDogdW5kZWZpbmVkfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICA8L0J1dHRvbkdyb3VwPlxuICApO1xufTtcblxuXG5pbnRlcmZhY2UgTGFuZ1NlbGVjdG9yQnV0dG9uUHJvcHMge1xuICBpZDogc3RyaW5nXG4gIHRpdGxlOiBzdHJpbmdcbiAgaXNTZWxlY3RlZDogYm9vbGVhblxuICBvblNlbGVjdDogKCkgPT4gdm9pZFxuICBoYXNUcmFuc2xhdGlvbj86IGJvb2xlYW5cbiAgZGlzYWJsZVVubGVzc1RyYW5zbGF0ZWQ/OiBib29sZWFuXG59XG5jb25zdCBMYW5nU2VsZWN0b3JCdXR0b246IFJlYWN0LkZDPExhbmdTZWxlY3RvckJ1dHRvblByb3BzPiA9IGZ1bmN0aW9uIChwcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxCdXR0b25cbiAgICAgICAgYWN0aXZlPXtwcm9wcy5pc1NlbGVjdGVkfVxuICAgICAgICBkaXNhYmxlZD17cHJvcHMuaGFzVHJhbnNsYXRpb24gPT09IGZhbHNlICYmIHByb3BzLmRpc2FibGVVbmxlc3NUcmFuc2xhdGVkID09PSB0cnVlfVxuICAgICAgICBvbkNsaWNrPXtwcm9wcy5vblNlbGVjdH0+XG4gICAgICB7cHJvcHMuaWR9XG4gICAgPC9CdXR0b24+XG4gICk7XG59O1xuIl19