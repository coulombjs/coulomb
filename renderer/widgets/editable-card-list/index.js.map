{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/renderer/widgets/editable-card-list/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Icon, Card, Text, Button } from '@blueprintjs/core';\nimport { IconName } from '@blueprintjs/icons';\nimport styles from './styles.scss';\n\n\ninterface AddCardTriggerProps {\n  onClick?: (...args: any[]) => void,\n  highlight?: boolean,\n  label?: string | JSX.Element,\n}\n\n\nexport const AddCardTrigger: React.FC<AddCardTriggerProps> = function ({ onClick, highlight, label }) {\n  return (\n    <div className={styles.addCardTriggerContainer}>\n      <AddCardTriggerButton onClick={onClick} highlight={highlight} label={label} />\n    </div>\n  );\n};\n\n\n// If using separately from AddCardTrigger, wrap into element with addCardTriggerContainer class\nexport const AddCardTriggerButton: React.FC<AddCardTriggerProps> = function ({ onClick, highlight, label }) {\n  return <Button\n    icon=\"plus\"\n    onClick={onClick}\n    text={highlight ? (label || undefined) : undefined}\n    minimal={highlight ? true : undefined}\n    title={label ? label.toString() : \"\"}\n    intent={highlight ? \"primary\" : undefined}\n    className={`${styles.addCardTrigger} ${highlight ? styles.addCardTriggerHighlighted : ''}`}\n  />;\n};\n\n\ninterface SimpleEditableCardProps {\n  icon?: IconName,\n  selected?: boolean,\n  onDelete?: () => void,\n  onSelect?: () => void,\n  onClick?: () => void,\n  minimal?: boolean,\n  extended?: boolean,\n  contentsClassName?: string,\n  className?: string,\n}\nexport const SimpleEditableCard: React.FC<SimpleEditableCardProps> = function (props) {\n  let contents: JSX.Element;\n  const contentsClassName = `${styles.cardContents} ${props.contentsClassName || ''}`;\n\n  if (props.extended) {\n    contents = <div className={contentsClassName}>{props.children}</div>;\n  } else {\n    contents = (\n      <Text ellipsize={true} className={contentsClassName}>\n        {props.children}\n      </Text>\n    );\n  }\n\n  return (\n    <Card\n        className={`\n          ${styles.editableCard}\n          ${props.minimal ? styles.editableCardMinimal : ''}\n          ${props.selected ? styles.editableCardSelected : ''}\n          ${props.extended ? styles.editableCardExtended : ''}\n          ${props.onSelect ? styles.editableCardSelectable : ''}\n          ${props.onClick ? styles.editableCardInteractive : ''}\n          ${props.onDelete ? styles.editableCardDeletable : ''}\n          ${props.className || ''}\n        `}\n        interactive={(props.onClick || props.onSelect) ? true : false}\n        onClick={props.onClick || props.onSelect}>\n\n      {props.icon\n        ? <><Icon icon={props.icon} />&ensp;</>\n        : null}\n\n      {contents}\n\n      {props.onDelete\n        ? <Button\n            onClick={(evt: any) => {\n              props.onDelete ? props.onDelete() : void 0;\n              evt.stopPropagation();\n              return false;\n            }}\n            intent=\"danger\"\n            icon=\"delete\"\n            title=\"Delete this item\"\n            className={styles.editableCardDeleteButton}\n            minimal={true}\n            small={true}\n          />\n        : null}\n\n    </Card>\n  );\n};\n"]}