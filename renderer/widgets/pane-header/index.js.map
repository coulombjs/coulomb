{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/renderer/widgets/pane-header/index.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AACzC,OAAO,MAAM,MAAM,eAAe,CAAC;AAWnC,MAAM,CAAC,MAAM,UAAU,GAA8B,UAAU,KAAK;IAClE,IAAI,cAAsB,CAAC;IAC3B,IAAI,KAAK,CAAC,KAAK,KAAK,MAAM,EAAE;QAC1B,cAAc,GAAG,MAAM,CAAC,qBAAqB,CAAC;KAC/C;SAAM,IAAI,KAAK,CAAC,KAAK,KAAK,OAAO,EAAE;QAClC,cAAc,GAAG,MAAM,CAAC,sBAAsB,CAAC;KAChD;SAAM;QACL,cAAc,GAAG,EAAE,CAAC;KACrB;IAED,OAAO,CACL,4BAAI,SAAS,EAAE;QACX,MAAM,CAAC,UAAU;QACjB,cAAc;QACd,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;QACtC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;QACzC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;KAC5C;QAEC,oBAAC,IAAI,IAAC,SAAS,EAAE,MAAM,CAAC,KAAK,EAAE,SAAS,EAAE,CAAC,KAAK,CAAC,SAAS,IACvD,KAAK,CAAC,QAAQ,CACV;QAEN,KAAK,CAAC,OAAO;YACZ,CAAC,CAAC,6BAAK,SAAS,EAAE,MAAM,CAAC,OAAO,IAAG,KAAK,CAAC,OAAO,CAAO;YACvD,CAAC,CAAC,IAAI,CAEL,CACN,CAAA;AACH,CAAC,CAAC","sourcesContent":["import React from 'react';\nimport { Text } from '@blueprintjs/core';\nimport styles from './styles.scss';\n\n\nexport interface PaneHeaderProps {\n  major?: boolean,\n  minor?: boolean,\n  align?: 'left' | 'right',\n  className?: string,\n  actions?: JSX.Element,\n  multiline?: boolean,\n}\nexport const PaneHeader: React.FC<PaneHeaderProps> = function (props) {\n  let alignmentClass: string;\n  if (props.align === 'left') {\n    alignmentClass = styles.paneHeaderAlignedLeft;\n  } else if (props.align === 'right') {\n    alignmentClass = styles.paneHeaderAlignedRight;\n  } else {\n    alignmentClass = '';\n  }\n\n  return (\n    <h2 className={`\n      ${styles.paneHeader}\n      ${alignmentClass}\n      ${props.className ? props.className : ''}\n      ${props.major ? styles.paneHeaderMajor : ''}\n      ${props.minor ? styles.paneHeaderMinor : ''}\n    `}>\n\n      <Text className={styles.title} ellipsize={!props.multiline}>\n        {props.children}\n      </Text>\n\n      {props.actions\n        ? <div className={styles.actions}>{props.actions}</div>\n        : null}\n\n    </h2>\n  )\n};\n"]}